Terminals unused in grammar

   NOT


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input line

    3 line: exp EQUAL END
    4     | var END
    5     | term END

    6 exp: NUMBER
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp MULT exp
   10    | exp DIV exp
   11    | MINUS exp
   12    | L_PAREN exp R_PAREN

   13 term: MINUS var
   14     | MINUS exp

   15 var: IDENT
   16    | IDENT L_SQUARE_BRACKET exp R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
MULT (258) 9
DIV (259) 10
PLUS (260) 7
MINUS (261) 8 11 13 14
EQUAL (262) 3
L_PAREN (263) 12
R_PAREN (264) 12
L_SQUARE_BRACKET (265) 16
R_SQUARE_BRACKET (266) 16
NOT (267)
END (268) 3 4 5
NUMBER (269) 6
IDENT (270) 15 16
UMINUS (271)


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
input (18)
    on left: 1 2, on right: 0 2
line (19)
    on left: 3 4 5, on right: 2
exp (20)
    on left: 6 7 8 9 10 11 12, on right: 3 7 8 9 10 11 12 14 16
term (21)
    on left: 13 14, on right: 5
var (22)
    on left: 15 16, on right: 4 13


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . line

    $end     shift, and go to state 2
    MINUS    shift, and go to state 3
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6

    line  go to state 7
    exp   go to state 8
    term  go to state 9
    var   go to state 10


State 2

    0 $accept: input $end .

    $default  accept


State 3

   11 exp: MINUS . exp
   13 term: MINUS . var
   14     | MINUS . exp

    MINUS    shift, and go to state 11
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6

    exp  go to state 12
    var  go to state 13


State 4

   12 exp: L_PAREN . exp R_PAREN

    MINUS    shift, and go to state 11
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5

    exp  go to state 14


State 5

    6 exp: NUMBER .

    $default  reduce using rule 6 (exp)


State 6

   15 var: IDENT .
   16    | IDENT . L_SQUARE_BRACKET exp R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 15

    $default  reduce using rule 15 (var)


State 7

    2 input: input line .

    $default  reduce using rule 2 (input)


State 8

    3 line: exp . EQUAL END
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp

    MULT   shift, and go to state 16
    DIV    shift, and go to state 17
    PLUS   shift, and go to state 18
    MINUS  shift, and go to state 19
    EQUAL  shift, and go to state 20


State 9

    5 line: term . END

    END  shift, and go to state 21


State 10

    4 line: var . END

    END  shift, and go to state 22


State 11

   11 exp: MINUS . exp

    MINUS    shift, and go to state 11
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5

    exp  go to state 23


State 12

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   11    | MINUS exp .
   14 term: MINUS exp .

    END       reduce using rule 14 (term)
    $default  reduce using rule 11 (exp)


State 13

   13 term: MINUS var .

    $default  reduce using rule 13 (term)


State 14

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   12    | L_PAREN exp . R_PAREN

    MULT     shift, and go to state 16
    DIV      shift, and go to state 17
    PLUS     shift, and go to state 18
    MINUS    shift, and go to state 19
    R_PAREN  shift, and go to state 24


State 15

   16 var: IDENT L_SQUARE_BRACKET . exp R_SQUARE_BRACKET

    MINUS    shift, and go to state 11
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5

    exp  go to state 25


State 16

    9 exp: exp MULT . exp

    MINUS    shift, and go to state 11
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5

    exp  go to state 26


State 17

   10 exp: exp DIV . exp

    MINUS    shift, and go to state 11
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5

    exp  go to state 27


State 18

    7 exp: exp PLUS . exp

    MINUS    shift, and go to state 11
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5

    exp  go to state 28


State 19

    8 exp: exp MINUS . exp

    MINUS    shift, and go to state 11
    L_PAREN  shift, and go to state 4
    NUMBER   shift, and go to state 5

    exp  go to state 29


State 20

    3 line: exp EQUAL . END

    END  shift, and go to state 30


State 21

    5 line: term END .

    $default  reduce using rule 5 (line)


State 22

    4 line: var END .

    $default  reduce using rule 4 (line)


State 23

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   11    | MINUS exp .

    $default  reduce using rule 11 (exp)


State 24

   12 exp: L_PAREN exp R_PAREN .

    $default  reduce using rule 12 (exp)


State 25

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   16 var: IDENT L_SQUARE_BRACKET exp . R_SQUARE_BRACKET

    MULT              shift, and go to state 16
    DIV               shift, and go to state 17
    PLUS              shift, and go to state 18
    MINUS             shift, and go to state 19
    R_SQUARE_BRACKET  shift, and go to state 31


State 26

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
    9    | exp MULT exp .
   10    | exp . DIV exp

    $default  reduce using rule 9 (exp)


State 27

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   10    | exp DIV exp .

    $default  reduce using rule 10 (exp)


State 28

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp

    MULT  shift, and go to state 16
    DIV   shift, and go to state 17

    $default  reduce using rule 7 (exp)


State 29

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . MULT exp
   10    | exp . DIV exp

    MULT  shift, and go to state 16
    DIV   shift, and go to state 17

    $default  reduce using rule 8 (exp)


State 30

    3 line: exp EQUAL END .

    $default  reduce using rule 3 (line)


State 31

   16 var: IDENT L_SQUARE_BRACKET exp R_SQUARE_BRACKET .

    $default  reduce using rule 16 (var)
